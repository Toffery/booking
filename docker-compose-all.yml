services:
  booking_backend_service:
    container_name: 'booking_backend'
    build:
      context: .
    networks:
      - my-network
    environment:
      - MODE=DEV
    env_file:
      - .docker.env

  booking_celery_worker_service:
    container_name: 'booking_celery_worker'
    build:
      context: .
    networks:
      - my-network
    env_file:
      - .docker.env
    command:
      ["celery", "--app=src.core.tasks.celery_app:celery_instance", "worker", "-l", "INFO"]

  booking_celery_beat_service:
    container_name: 'booking_celery_beat'
    build:
      context: .
    networks:
      - my-network
    env_file:
      - .docker.env
    command:
      ["celery", "--app=src.core.tasks.celery_app:celery_instance", "beat", "-l", "INFO" ]

  booking_redis_service:
    container_name: 'booking_redis'
    image: 'redis:latest'
    networks:
      - my-network
    expose:
      - 6379

  booking_db_service:
    container_name: 'booking_postgres'
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=booking
    networks:
      - my-network
    expose:
      - 5432
    volumes:
      - pg-booking-data:/var/lib/postgresql/data

  booking_nginx_service:
    container_name: 'booking_nginx'
    image: 'nginx:latest'
    networks:
      - my-network
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

networks:
  my-network:
    external: True

volumes:
  pg-booking-data:
